---
- name: Install and configure Python and Helm on azure_vms1
  hosts: azure_vms1
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        force_apt_get: yes
    
    - name: Install Python 3
      apt:
        name: python3
        state: present

    - name: Download Helm install script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0755'
    
    - name: Install Helm
      command: /bin/bash /tmp/get_helm.sh
    
    - name: Verify Helm Installation
      command: helm version
      register: helm_version
      failed_when: helm_version.rc != 0

    - name: Show Helm Version
      debug:
        msg: "{{ helm_version.stdout }}"
      when: helm_version.rc == 0


- name: Install and configure software on azure_vms2
  hosts: azure_vms2
  become: yes
  tasks:
    # Install Podman
    - name: Update package cache (Debian)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Podman (Debian/Ubuntu)
      apt:
        name: podman
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Podman (RHEL/CentOS)
      yum:
        name: podman
        state: present
      when: ansible_os_family == "RedHat"

    - name: Verify Podman Installation
      command: podman --version
      register: podman_version
      failed_when: podman_version.rc != 0

    - name: Show Podman Version
      debug:
        msg: "{{ podman_version.stdout }}"
      when: podman_version.rc == 0

    # Install jq version 1.7
    - name: Download jq 1.7 for Linux (Debian/Ubuntu)
      get_url:
        url: https://github.com/stedolan/jq/releases/download/jq-1.7/jq-linux64
        dest: /usr/local/bin/jq
        mode: '0755'
      when: ansible_os_family == "Debian"

    - name: Download jq 1.7 for Linux (RHEL/CentOS)
      get_url:
        url: https://github.com/stedolan/jq/releases/download/jq-1.7/jq-linux64
        dest: /usr/local/bin/jq
        mode: '0755'
      when: ansible_os_family == "RedHat"

    - name: Verify jq installation
      command: jq --version
      register: jq_version
      changed_when: false

    - name: Show jq version
      debug:
        msg: "jq version: {{ jq_version.stdout }}"
      when: jq_version.rc == 0

    # Install Ansible
    - name: Install required dependencies (Debian)
      apt:
        name:
          - software-properties-common
          - python3-pip
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Ansible PPA (Debian)
      apt_repository:
        repo: ppa:ansible/ansible
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Ansible (Debian)
      apt:
        name: ansible
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Ansible (RedHat)
      yum:
        name: ansible
        state: present
      when: ansible_os_family == "RedHat"

    - name: Verify Ansible installation
      command: ansible --version
      register: ansible_version
      failed_when: ansible_version.rc != 0

    - name: Show Ansible Version
      debug:
        msg: "Ansible version: {{ ansible_version.stdout }}"
      when: ansible_version.rc == 0

    # Install Node.js 18.19.0
    - name: Install prerequisites (Ubuntu/Debian)
      apt:
        name: [curl, gnupg]
        state: present
      when: ansible_os_family == "Debian"
 
    - name: Add Node.js 18.x repository (Ubuntu/Debian)
      shell: curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      when: ansible_os_family == "Debian"
 
    - name: Install Node.js 18.19.0 (Ubuntu/Debian)
      apt:
        name: nodejs
        state: present
      when: ansible_os_family == "Debian"
 
    - name: Install Node.js 18.19.0 (RHEL/CentOS)
      shell: |
        curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
        yum install -y nodejs
      when: ansible_os_family == "RedHat"
 
    - name: Verify Node.js Installation
      command: node -v
      register: node_version
      failed_when: node_version.rc != 0

    - name: Show Node.js Version
      debug:
        msg: "Installed Node.js version: {{ node_version.stdout }}"
      when: node_version.rc == 0
